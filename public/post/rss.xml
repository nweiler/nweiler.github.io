


















    
        
    

    
        

        
            
        
    




<?xml version="1.0" encoding="utf-8"?>

<rss version="2.0"  xml:lang="en-us"  xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        

        

        
            <language>en-us</language>
        

        
            <lastBuildDate>Thu, 16 Oct 2025 19:13:23 EDT</lastBuildDate>
        

        
            <link>http://localhost:1313/post/</link>
        

        
            <atom:link href="http://localhost:1313/post/rss.xml" hreflang="en-us" rel="self" type="application/rss+xml"/>
        

        
            

            <atom:link href="http://localhost:1313/post/" hreflang="en-us" rel="alternate" type="text/html"/>
        
            

            <atom:link href="http://localhost:1313/post/rss.xml" hreflang="en-us" rel="alternate" type="application/rss+xml"/>
        

        

        

        
            <title>Posts · NWLR</title>
        

        

        
            
                <item>
                    
                    
                    
                    
                    
                    
                    

                    

                    

                    

                    

                    
                    
                    

                    

                    
                        <description><![CDATA[<p>&lsquo;What is a TCP Connection?&rsquo; This seemingly simple question led to a lot of digging and a lot of learning. I&rsquo;ve danced around networking for a long time. Like many (most?) software developers, networking is sometimes a twist, often a struggle, and never the point.</p><h2 id=mystery>Mystery</h2><p>I don&rsquo;t inherently dislike networking. It&rsquo;s actually sort of fascinating and beautiful. But it&rsquo;s also mysterious. Counterintuitive. Hidden. Daunting. I received a rushed intro on TCP and other networking concepts early in my journey. TCP got brief attention - enough to grasp the basic idea - and little more. I saw a diagram that looked like this:
![[./unnamed.jpg]]
(Credit: AI Slop. Check out that spelling&mldr;!)</p><p>Since then, I have had many scenarios where this understanding wasn&rsquo;t enough. Troubleshooting mostly. I ran into this yet again the other day. Applications weren&rsquo;t talking to each other. They were on machines that were practically touching, yet might as well have been light years apart. There is a stark aloneness when you can&rsquo;t get machines or processes to talk. It&rsquo;s like a relationship that has broken down, or an argument that has finally gone too far. My frustration trumped my anxiety and I started searching for answers.</p><h2 id=so-really-what-is-it>So really, what is it?</h2><p>So what <em>is</em> a TCP connection? I know how they&rsquo;re setup. I know why they are used. I (roughly) know what they can do when packets are dropped. But what is it? On re-researching this, I felt validated at the fact that nearly every search result is about how TCP connections are <em>created.</em> A worthy topic, but not the only one that matters. It&rsquo;s as if someone from another planet asked what a car is, and the answer is a deep dive on assembly lines and principles of manufacturing.</p><p>So before It&rsquo;s important to thoroughly understand the <em>thing</em> itself first before jumping into other questions. What is it? What is it made of? How is it represented? What does it look like? Why does it exist? I didn&rsquo;t have solid answers to these questions, other than a high-level explanation that is usually offered for the &lsquo;why.&rsquo;</p><p>A TCP connection isn&rsquo;t much of a <em>thing</em> at all. It&rsquo;s a data structure generated independently by the server and the client based on shared information. It&rsquo;s the remaining artifact of the TCP handshake process, and updated independently on both sides of the transaction as new information comes in. The closest thing to a <em>thing</em> is the TCP control block (TCB) - a small piece of information stored in the kernel of the client and server that keeps a record of this. It keeps a record of connection status, sequence numbers, addresses/ports, timers, and other information related to the communication.</p><p>So it&rsquo;s a data structure. Stored in memory. That&rsquo;s not weird. Half of what we do is dealing with imaginary (or at least volatile <em>things</em>.) But for one, the TCP connection is share data that is never shared between client and server - just imputed through a shared process. That seems unusual. Especially when the thing being managed is literally a communication channel. (On further reflection - is this bad? Data redundancy is generally bad. Do the server and client ever get out of sync? Probably. Has anyone ever explored shared client-server state for connections, or other networking processes? Maybe?)</p><p>Next, I asked how I can actually look at the connections on my machine. The answer? <code>netstat</code> This was surprising. I&rsquo;ve used this command many times. It never occurred to me that I was looking at a list of TCP connections on my machine. Wait, hang on. Are these connections or sockets? What is a socket? We jumped from connection to socket&mldr;</p><h2 id=socket-to-me>Socket to me</h2><p>Ok, a socket appears to be a generic <em>interface</em> for communication between two processes. Sockets are associated with a protocol+address+port - just like a connection. So a socket is conceptually at the same level as a connection. It bridges data from applications/processes to network communications and vice-versa. A connection is information stored on the kernel about communication with a remote host. A socket is a local file descriptor that points at that connection</p><h2 id=show-me>Show me</h2><p>Ok. So then <em>netstat</em> is showing me the connections currently stored on my machine:</p><pre tabindex=0><code>❯ netstat
Active Internet connections
Proto Recv-Q Send-Q  Local Address          Foreign Address        (state)
tcp4       0      0  10.226.245.157.60596   20.189.173.17.https    ESTABLISHED
tcp4       0      0  10.226.245.157.60520   ec2-54-189-176-1.https ESTABLISHED
tcp4       0      0  10.226.245.157.60357   ec2-44-240-41-36.https ESTABLISHED
tcp4       0      0  10.226.245.157.60282   ord38s33-in-f10..https ESTABLISHED</code></pre><p>I see a column for the protocol. Clear enough. What are columns two and three? Recv-Q and Send-Q are apparently buffers, showing data that has been received or is about to be sent but hasn&rsquo;t made it all the way. So under normal operation these will generally be empty. Makes sense. Local address and foreign address and clear enough. State seems to make sense, intuitively, though I don&rsquo;t know what ESTABLISHED really means. Ok, that appears to mean that a connection is fully established between two hosts, and is ready for data transmission in either direction.</p><p>Ok, so that&rsquo;s all pretty clear. And not that hard. Sometimes I get to the end of these dives and I think &ldquo;What was my question?&rdquo; It can be hard to remember what it&rsquo;s like to not understand this stuff. Either way, now it&rsquo;s more clear. Or less unclear. I&rsquo;m sure this will be helpful at some point&mldr;</p>]]></description>
                    

                    
                        <guid isPermaLink="false">tag:localhost:1313,2025-10-16:/post/2025-10-16-making-connections/</guid>
                    

                    
                        <link>http://localhost:1313/post/2025-10-16-making-connections/</link>
                    

                    
                        

                        

                        <atom:link href="http://localhost:1313/post/2025-10-16-making-connections/" hreflang="en-us" rel="alternate" type="text/html"/>
                    

                    

                    
                        <pubDate>Thu, 16 Oct 2025 19:13:23 EDT</pubDate>
                    

                    
                        <title>Making Connections</title>
                    
                </item>
            
        
            
                <item>
                    
                    
                    
                    
                    
                    
                    

                    

                    

                    

                    

                    
                    
                    

                    

                    
                        <description><![CDATA[<h1 id=chaos>Chaos</h1><p>I went to Applebee&rsquo;s on Sunday afternoon. Not by choice. I wouldn&rsquo;t willingly choose to eat there. Someone I love had a gift card. There are two of us.</p><p>A family of reaches the entrance at the same time as we do. The father and I play leap frog with the doors. We joke about it a little bit and he seems nice enough. His wife has a much different demeantor. She looks at me suspiciously, as if my goal is to beat them to the front of the line. I&rsquo;m tired, in no rush, and not particularly interested in eating the food. They are served first and find a seat at a hightop near the bar. We continue to wait for a few more minutes. As I casually scan the room the wife is again looking at me. She seems pleased to be sitting, but perhaps fighting feelings of guilt? that she was seated first. I&rsquo;m stumped by her continued engagement.</p><p>The maitre d (using that term very generously) eventually comes back. She never really makes eye contact.</p><p>The table is vaguely sticky and moist.</p><p>A middle-aged man and his (presumably) father sit across from us. They quickly demand to see the Bears game on the TV directly above my table. They somehow get their food very quickly - seemingly without ordering - and proceed to start wolfing it down. They burp in a way that I might have done as a twelve year old - trying in braindead early teenage boy fashion to make my friends laugh. They do it with no irony. It&rsquo;s hard to ignore their similarity to farm animals grazing - except grazing seems, again, generous for the situation. I observe this and make the connection, then feel guilt at having drawn this parallel. I&rsquo;m thoroughly uncomfortable, and yet also feeling guilty and stuck-up.</p><p>Am I right to feel this way? Are there other people who see me this way?</p>]]></description>
                    

                    
                        <guid isPermaLink="false">tag:localhost:1313,2025-09-22:/post/2025-09-22-dealing-with-chaos/</guid>
                    

                    
                        <link>http://localhost:1313/post/2025-09-22-dealing-with-chaos/</link>
                    

                    
                        

                        

                        <atom:link href="http://localhost:1313/post/2025-09-22-dealing-with-chaos/" hreflang="en-us" rel="alternate" type="text/html"/>
                    

                    

                    
                        <pubDate>Mon, 22 Sep 2025 19:13:23 EDT</pubDate>
                    

                    
                        <title>Dealing With Chaos</title>
                    
                </item>
            
        
            
                <item>
                    
                    
                    
                    
                    
                    
                    

                    

                    

                    

                    

                    
                    
                    

                    

                    
                        <description><![CDATA[<h1 id=planning>Planning</h1><p>Running a household is hard work. Organization is not easy to achieve or maintain and time is short. We have tried many calendar and planning systems. Digital calendars provided the greatest benefit due to their integration with phones and instantaneous sync between family members. One downside is the lack of a single, large display that a traditional paper calendar might provide. This presented an opportunity to solve a real problem with a digital dashboard. The primary goal was to display the calendar on a screen where all family members could see it. Other possible benfits included the ability to display a todo list.</p><p>My home dashboard is the most successful home tech project I&rsquo;ve ever attempted. It was fun and rewarding. My family gets a lot of value out of it. My partner can&rsquo;t deny its usefulness.
The sales process and the evaluation phase of home projects is unforgiving. Family members don&rsquo;t have much regard for novel tools or techniques. They won&rsquo;t appreciate an elegant deployment system or clean code. They get value out of it or they don&rsquo;t.
The home dashboard.</p>]]></description>
                    

                    
                        <guid isPermaLink="false">tag:localhost:1313,2025-08-16:/post/2025-08-16-home-dashboard-project/</guid>
                    

                    
                        <link>http://localhost:1313/post/2025-08-16-home-dashboard-project/</link>
                    

                    
                        

                        

                        <atom:link href="http://localhost:1313/post/2025-08-16-home-dashboard-project/" hreflang="en-us" rel="alternate" type="text/html"/>
                    

                    

                    
                        <pubDate>Sat, 16 Aug 2025 00:00:00 UTC</pubDate>
                    

                    
                        <title>Home Dashboard Project</title>
                    
                </item>
            
        
    </channel>
</rss>
