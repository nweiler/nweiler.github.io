
        
            
        
        
        
        
        
        
        
        
        
        
        
        
        [{"categories":[{"LinkTitle":"Programming","RelPermalink":"/categories/programming/"}],"content":"Making Connections \u0026lsquo;What is a TCP Connection?\u0026rsquo; This seemingly simple question led to a lot of digging and a lot of learning. I\u0026rsquo;ve danced around networking for a long time. Like many (most?) software developers, networking is sometimes a twist, often a struggle, and never the point.\nMystery I don\u0026rsquo;t inherently dislike networking. It\u0026rsquo;s actually sort of fascinating and beautiful. But it\u0026rsquo;s also mysterious. Counterintuitive. Hidden. Daunting. I received a rushed intro on TCP and other networking concepts early in my journey. TCP got brief attention - enough to grasp the basic idea - and little more. I saw a diagram that looked like this: ![[unnamed.jpg]] (Credit: AI Slop. Check out that spelling\u0026hellip;!)\nSince then, I have had many scenarios where this understanding wasn\u0026rsquo;t enough. Troubleshooting mostly. I ran into this yet again the other day. Applications weren\u0026rsquo;t talking to each other. They were on machines that were practically touching, yet might as well have been light years apart. There is a stark aloneness when you can\u0026rsquo;t get machines or processes to talk. It\u0026rsquo;s like a relationship that has broken down, or an argument that has finally gone too far. My frustration trumped my anxiety and I started searching for answers.\nSo really, what is it? So what is a TCP connection? I know how they\u0026rsquo;re setup. I know why they are used. I (roughly) know what they can do when packets are dropped. But what is it? On re-researching this, I felt validated at the fact that nearly every search result is about how TCP connections are created. A worthy topic, but not the only one that matters. It\u0026rsquo;s as if someone from another planet asked what a car is, and the answer is a deep dive on assembly lines and principles of manufacturing.\nSo before It\u0026rsquo;s important to thoroughly understand the thing itself first before jumping into other questions. What is it? What is it made of? How is it represented? What does it look like? Why does it exist? I didn\u0026rsquo;t have solid answers to these questions, other than a high-level explanation that is usually offered for the \u0026lsquo;why.\u0026rsquo;\nA TCP connection isn\u0026rsquo;t much of a thing at all. It\u0026rsquo;s a data structure generated independently by the server and the client based on shared information. It\u0026rsquo;s the remaining artifact of the TCP handshake process, and updated independently on both sides of the transaction as new information comes in. The closest thing to a thing is the TCP control block (TCB) - a small piece of information stored in the kernel of the client and server that keeps a record of this. It keeps a record of connection status, sequence numbers, addresses/ports, timers, and other information related to the communication.\nSo it\u0026rsquo;s a data structure. Stored in memory. That\u0026rsquo;s not weird. Half of what we do is dealing with imaginary (or at least volatile things.) But for one, the TCP connection is share data that is never shared between client and server - just imputed through a shared process. That seems unusual. Especially when the thing being managed is literally a communication channel. (On further reflection - is this bad? Data redundancy is generally bad. Do the server and client ever get out of sync? Probably. Has anyone ever explored shared client-server state for connections, or other networking processes? Maybe?)\nNext, I asked how I can actually look at the connections on my machine. The answer? netstat This was surprising. I\u0026rsquo;ve used this command many times. It never occurred to me that I was looking at a list of TCP connections on my machine. Wait, hang on. Are these connections or sockets? What is a socket? We jumped from connection to socket\u0026hellip;\nSocket to me Ok, a socket appears to be a generic interface for communication between two processes. Sockets are associated with a protocol+address+port - just like a connection. So a socket is conceptually at the same level as a connection. It bridges data from applications/processes to network communications and vice-versa. A connection is information stored on the kernel about communication with a remote host. A socket is a local file descriptor that points at that connection\nShow me Ok. So then netstat is showing me the connections currently stored on my machine:\n‚ùØ netstat Active Internet connections Proto Recv-Q Send-Q Local Address Foreign Address (state) tcp4 0 0 10.226.245.157.60596 20.189.173.17.https ESTABLISHED tcp4 0 0 10.226.245.157.60520 ec2-54-189-176-1.https ESTABLISHED tcp4 0 0 10.226.245.157.60357 ec2-44-240-41-36.https ESTABLISHED tcp4 0 0 10.226.245.157.60282 ord38s33-in-f10..https ESTABLISHED I see a column for the protocol. Clear enough. What are columns two and three? Recv-Q and Send-Q are apparently buffers, showing data that has been received or is about to be sent but hasn\u0026rsquo;t made it all the way. So under normal operation these will generally be empty. Makes sense. Local address and foreign address and clear enough. State seems to make sense, intuitively, though I don\u0026rsquo;t know what ESTABLISHED really means. Ok, that appears to mean that a connection is fully established between two hosts, and is ready for data transmission in either direction.\nOk, so that\u0026rsquo;s all pretty clear. And not that hard. Sometimes I get to the end of these dives and I think \u0026ldquo;What was my question?\u0026rdquo; It can be hard to remember what it\u0026rsquo;s like to not understand this stuff. Either way, now it\u0026rsquo;s more clear. Or less unclear. I\u0026rsquo;m sure this will be helpful at some point\u0026hellip;\n","permalink":"http://localhost:1313/post/conn/","tags":[],"title":"Making Connections"},{"categories":[],"content":"Planning Running a household is hard work. Organization is not easy to achieve or maintain and time is short. We have tried many calendar and planning systems. Digital calendars provided the greatest benefit due to their integration with phones and instantaneous sync between family members. One downside is the lack of a single, large display that a traditional paper calendar might provide. This presented an opportunity to solve a real problem with a digital dashboard. The primary goal was to display the calendar on a screen where all family members could see it. Other possible benfits included the ability to display a todo list.\nMy home dashboard is the most successful home tech project I\u0026rsquo;ve ever attempted. It was fun and rewarding. My family gets a lot of value out of it. My partner can\u0026rsquo;t deny its usefulness. The sales process and the evaluation phase of home projects is unforgiving. Family members don\u0026rsquo;t have much regard for novel tools or techniques. They won\u0026rsquo;t appreciate an elegant deployment system or clean code. They get value out of it or they don\u0026rsquo;t. The home dashboard.\n","permalink":"http://localhost:1313/post/dashboard/","tags":[],"title":"Home Dashboard Project"},{"categories":[],"content":"","permalink":"http://localhost:1313/manifest.json","tags":[],"title":""},{"categories":[],"content":"","permalink":"http://localhost:1313/search/_index.de/","tags":[],"title":""},{"categories":[],"content":"","permalink":"http://localhost:1313/search/_index.es/","tags":[],"title":""},{"categories":[],"content":"","permalink":"http://localhost:1313/search/_index.fr/","tags":[],"title":""},{"categories":[],"content":"","permalink":"http://localhost:1313/search/_index.hi/","tags":[],"title":""},{"categories":[],"content":"","permalink":"http://localhost:1313/search/_index.jp/","tags":[],"title":""},{"categories":[],"content":"","permalink":"http://localhost:1313/search/_index.nl/","tags":[],"title":""},{"categories":[],"content":"","permalink":"http://localhost:1313/search/_index.pl/","tags":[],"title":""},{"categories":[],"content":"","permalink":"http://localhost:1313/search/_index.ru/","tags":[],"title":""},{"categories":[],"content":"","permalink":"http://localhost:1313/search/_index.zh-cn/","tags":[],"title":""},{"categories":[],"content":"About me\n","permalink":"http://localhost:1313/page/about/","tags":[],"title":"About"}]